Welcome to SWI-Prolog (threaded, 64 bits, version 9.0.4)
SWI-Prolog comes with ABSOLUTELY NO WARRANTY. This is free software.
Please run ?- license. for legal details.

For online help and background, visit https://www.swi-prolog.org
For built-in help, use ?- help(Topic). or ?- apropos(Word).

?- working_directory(_, "/DIR/TO/ALEPH").
true.

?- consult(aleph).
Warning: /DIR/TO/ALEPH/aleph.pl:1179:
Warning:    Singleton variable in branch: HOVars
Warning:    Singleton variable in branch: Recursion
Warning: /DIR/TO/ALEPH/aleph.pl:1925:
Warning:    Singleton variable in branch: Body
Warning: /DIR/TO/ALEPH/aleph.pl:1937:
Warning:    Singleton variable in branch: Body
Warning: /DIR/TO/ALEPH/aleph.pl:2251:
Warning:    Singleton variable in branch: PC
Warning: /DIR/TO/ALEPH/aleph.pl:4286:
Warning:    Singleton variable in branch: D
Warning: /DIR/TO/ALEPH/aleph.pl:4591:
Warning:    Singleton variable in branch: B
Warning: /DIR/TO/ALEPH/aleph.pl:6031:
Warning:    Singleton variable in branch: Clause
Warning:    Singleton variable in branch: D1
Warning: /DIR/TO/ALEPH/aleph.pl:7839:
Warning:    Singleton variable in branch: Hash
Warning: /DIR/TO/ALEPH/aleph.pl:9176:
Warning:    Singleton variable in branch: Type
Warning: /DIR/TO/ALEPH/aleph.pl:10218:
Warning:    Test is always true: var(Id)


A L E P H
Version 6
Last modified: Sun Jan 1 12:00:00 UTC 2017

Manual: http://www.comlab.ox.ac.uk/oucl/groups/machlearn/Aleph/index.html

true.

?- read_all(teammate).
[consulting pos examples] [teammate.f]
[consulting neg examples] [teammate.n]
true .

?- 
|    induce.
[select example] [1]
[sat] [1]
[isAllowedToUse(teammates_logic_api,teammates_logic_core)]
[repeated literals] [1/93] 

[bottom clause]
isAllowedToUse(A,B) :-
   package(A), package(C), package(D), package(E), 
   package(F), package(G), package(H), package(I), 
   package(J), package(K), package(L), package(M), 
   package(N), package(O), package(P), package(Q), 
   package(R), package(S), package(T), package(U), 
   package(V), package(W), package(X), package(Y), 
   package(Z), package(A1), package(B1), package(C1), 
   package(D1), package(E1), package(F1), package(G1), 
   package(H1), package(I1), package(J1), package(K1), 
   package(L1), package(M1), package(B), package(N1), 
   package(O1), containsClass(A,P1), containsClass(A,Q1), containsClass(A,R1), 
   containsClass(A,S1), containsClass(A,T1), class(T1), class(S1), 
   class(R1), class(Q1), class(P1), containsPackage(N1,E1), 
   containsPackage(M1,N1), containsPackage(M1,P), containsPackage(M1,O), containsPackage(J1,G1), 
   containsPackage(J1,B1), containsPackage(J1,Z), containsPackage(J1,Y), containsPackage(J1,X), 
   containsPackage(J1,U), containsPackage(J1,T), containsPackage(J1,M), containsPackage(J1,I), 
   containsPackage(J1,E), containsPackage(I1,L1), containsPackage(I1,V), containsPackage(D1,O1), 
   containsPackage(D1,H1), containsPackage(D1,N), containsPackage(C1,I1), containsPackage(C1,F1), 
   containsPackage(R,J1), containsPackage(R,A1), containsPackage(R,Q), containsPackage(O,H), 
   containsPackage(O,D), containsPackage(L,B), containsPackage(L,G), containsPackage(L,A), 
   containsPackage(K,K1), containsPackage(K,W), containsPackage(K,S), containsPackage(K,F), 
   containsPackage(K,C), containsPackage(J,M1), containsPackage(J,D1), containsPackage(J,C1), 
   containsPackage(J,R), containsPackage(J,L), containsPackage(J,K).
[literals] [92]
[saturation time] [0.070662]
[reduce]
[best label so far] [[1,0,2,1]/0] 
isAllowedToUse(A,B).
[2/0]
isAllowedToUse(A,B) :-
   package(C).
[2/0]
isAllowedToUse(A,B) :-
   package(C).
[2/0]
isAllowedToUse(A,B) :-
   package(C).
[2/0]
isAllowedToUse(A,B) :-
   package(C).
[2/0]
isAllowedToUse(A,B) :-
   package(C).
[2/0]
isAllowedToUse(A,B) :-
   package(C).
[2/0]
isAllowedToUse(A,B) :-
   package(C).
[2/0]
isAllowedToUse(A,B) :-
   package(C).
[2/0]
isAllowedToUse(A,B) :-
   package(C).
[2/0]
isAllowedToUse(A,B) :-
   package(C).
[2/0]
isAllowedToUse(A,B) :-
   package(C).
[2/0]
isAllowedToUse(A,B) :-
   package(C).
[2/0]
isAllowedToUse(A,B) :-
   package(A).
[2/0]
isAllowedToUse(A,B) :-
   package(C).
[2/0]
isAllowedToUse(A,B) :-
   package(B).
[2/0]
[-------------------------------------]
[found clause]
isAllowedToUse(A,B) :-
   package(B).
[pos cover = 2 neg cover = 0] [pos-neg] [2]
[clause label] [[2,0,2,2]]
[clauses constructed] [16]
[-------------------------------------]
[clauses constructed] [16] 
[search time] [0.0035690000000001554] 
[best clause] 
isAllowedToUse(A,B) :-
   package(B).
[pos cover = 2 neg cover = 0] [pos-neg] [2]
[atoms left] [0] 
[positive examples left] [0]
[estimated time to finish (secs)] [0.0]

[theory]

[Rule 1] [Pos cover = 2 Neg cover = 0]
isAllowedToUse(A,B) :-
   package(B).

[Training set performance]
         Actual
       +        - 
     + 2        0        2 
Pred 
     - 0        0        0 

       2        0        2 

Accuracy = 1
[Training set summary] [[2,0,0,0]]
[time taken] [0.08559099999999997] 
[search statistics] 
[total clauses constructed] [16] 
[search_time_taken(0.08559099999999997)] 
true.

?- 